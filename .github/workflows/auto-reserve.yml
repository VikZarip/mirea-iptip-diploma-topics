name: Auto Reserve Topic
on:
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write

jobs:
  reserve:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract form data
        id: extract
        run: |
          BODY=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")
          # Извлечь значения под заголовками полей формы
          FIO=$(printf "%s" "$BODY" | awk '/^\s*ФИО студента/{getline; print}' | tr -d '\r')
          SLUG=$(printf "%s" "$BODY" | awk '/^\s*Слаг темы/{getline; print}' | tr -d '\r')
          SUPERVISOR=$(printf "%s" "$BODY" | awk '/^\s*Научный руководитель/{getline; print}' | tr -d '\r')
          ACCESS=$(printf "%s" "$BODY" | awk '/^\s*Код доступа/{getline; print}' | tr -d '\r')
          echo "fio=$FIO" >> $GITHUB_OUTPUT
          echo "slug=$SLUG" >> $GITHUB_OUTPUT
          echo "supervisor=$SUPERVISOR" >> $GITHUB_OUTPUT
          echo "access_code=$ACCESS" >> $GITHUB_OUTPUT

      - name: Validate inputs
        run: |
          test -n "${{ steps.extract.outputs.slug }}" || { echo "Пустой slug"; exit 1; }
          FILE="diploma-info/topics/${{ steps.extract.outputs.slug }}.md"
          test -f "$FILE" || { echo "Файл темы не найден: $FILE"; exit 1; }
          # Проверка, что тема свободна
          if grep -qiE '^\*\*Статус:\*\*\s*(Зарезервирована|в работе|завершена)' "$FILE"; then
            echo "Тема уже занята/в работе/завершена"; exit 1;
          fi

      - name: Check access code
        if: always()
        uses: actions/github-script@v7
        env:
          ACCESS_CODE: ${{ steps.extract.outputs.access_code }}
          SECRET_CODE: ${{ secrets.RESERVE_CODE }}
        with:
          script: |
            const access = process.env.ACCESS_CODE?.trim();
            const secret = process.env.SECRET_CODE?.trim();
            if (!secret) {
              core.setFailed('Секрет RESERVE_CODE не задан в репозитории.');
              return;
            }
            if (access !== secret) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: '❌ Неверный код доступа. Обратитесь к куратору за корректным кодом.'
              });
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                state: 'closed'
              });
              core.setFailed('Неверный код доступа. Заявка закрыта.');
            }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Reserve topic in markdown
        env:
          FILE_PATH: diploma-info/topics/${{ steps.extract.outputs.slug }}.md
          FIO: ${{ steps.extract.outputs.fio }}
          SUPERVISOR: ${{ steps.extract.outputs.supervisor }}
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = process.env.FILE_PATH;
          let s = fs.readFileSync(path, 'utf8');

          // 1) Обновить статус на Зарезервирована
          s = s.replace(/(\*\*Статус:\*\*)\s*Свободно/i, '$1 Зарезервирована');

          // 2) Добавить раздел, если нет
          if (!/##\s*Закреплённые студенты/i.test(s)) {
            s += '\n## Закреплённые студенты\n\n';
          }

          const today = new Date().toISOString().slice(0,10);
          const fio = (process.env.FIO || 'Студент').trim();
          const sup = (process.env.SUPERVISOR || '-').trim();

          // 3) Добавить запись в конец блока
          s = s.replace(/(##\s*Закреплённые студенты[\s\S]*?)$/i, `$1- ${fio} — ${today} — ${sup}\n\n`);

          fs.writeFileSync(path, s, 'utf8');
          NODE

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Auto-reserve: ${{ steps.extract.outputs.slug }} via issue #${{ github.event.issue.number }}" || echo "Nothing to commit"
          git push
